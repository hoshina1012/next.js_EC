// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Carts {
  id         Int      @id @unique
  userId     Int
  productId  Int
  product   Products @relation(fields: [productId], references: [id])
  categoryId Int
  kindId     Int
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Categories {
  id       Int        @id @unique
  name     String
  products Products[]
}

model Colors {
  id           Int            @id @unique
  name         String
  rubberColors RubberColors[]
}

model Helps {
  id        Int      @id @unique
  userId    Int
  title     String
  detail    String
  status    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItems {
  id        Int @id @unique
  orderId   Int
  order     Orders     @relation(fields: [orderId], references: [id])
  productId Int
  product     Products     @relation(fields: [productId], references: [id])
  quantity  Int
  kindId    Int
  status    Int
}

model Orders {
  id        Int      @id @unique
  userId    Int
  amount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  OrderItems OrderItems[]
}

model Payments {
  id        Int      @id @unique
  userId    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Products {
  id           Int            @id @unique
  userId       Int
  user         Users          @relation(fields: [userId], references: [id])
  categoryId   Int
  category     Categories     @relation(fields: [categoryId], references: [id])
  name         String
  description  String
  price        Int
  stock        Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  racketTypes  RacketTypes[]
  rubberColors RubberColors[]
  shoesSizes   ShoesSizes[]
  carts    Carts[]
  OrderItems OrderItems[]
}

model RacketTypes {
  id        Int      @id @unique
  productId Int
  typeId    Int
  product   Products @relation(fields: [productId], references: [id])
  type      Types    @relation(fields: [typeId], references: [id])
}

model RubberColors {
  id        Int      @id @unique
  productId Int
  colorId   Int
  product   Products @relation(fields: [productId], references: [id])
  color     Colors   @relation(fields: [colorId], references: [id])
}

model ShoesSizes {
  id        Int      @id @unique
  productId Int
  sizeId    Int
  product   Products @relation(fields: [productId], references: [id])
  size      Sizes    @relation(fields: [sizeId], references: [id])
}

model Sizes {
  id         Int          @id @unique
  name       String
  shoesSizes ShoesSizes[]
}

model Types {
  id          Int           @id @unique
  name        String
  racketTypes RacketTypes[]
}

model Users {
  id        Int        @id @default(autoincrement())
  mail      String     @unique
  password  String
  name      String
  authority Int        @default(0)
  status    Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  products  Products[]
}
